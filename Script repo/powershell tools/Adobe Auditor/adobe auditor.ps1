<#
Adobe Auditor
Created by Mathew Gallehawk
Passes through csv generated by adobe and returns a csv of end dated user
#>

#input file
function importfile{
    $folder = "$PSScriptRoot\Input"
    $file = $folder | Get-ChildItem -Filter *.csv

    if ($file.Count -eq 1){
        $data = Import-Csv $file.FullName
        return $data, $true
    }
    elseif ($file.Count -gt 1){
        Write-Host "Multiple files found, please ensure only one file is present"
        return $null, $false
    }
    else{
        Write-Host "No file found, please ensure a file is present"
        return $null, $false
    }
}


#output file
function OutFile($arr){
    $folder = "$PSScriptRoot\Output"
    $date = Get-Date -Format "dd-MM"
    $fileName = "AdobeTerminatedUsers_$date.csv"
    $arr | Export-Csv "$folder\$fileName" -NoTypeInformation
}

#compare function
function userAlive($UserName){
    $ADuser = Get-Aduser -Filter { EmailAddress -like $UserName } | Select-Object Userprincipalname,enabled;
    return $ADuser.enabled
}

#main function
function main{
    #import file
    $data, $success = importfile
    
    if ($success -eq $true){
    write-host "File imported successfully"
    $output = @()
    #for loop for each entry from the csv file
    $data | foreach-object{
        $User = $_.Username ;
        $license = $_.'Team Products';
        $ADuser = userAlive($User)
        if (($ADuser -eq $false) -and ($License -ne '')){
            $userObject = new-object psobject
            $userObject | add-member -membertype NoteProperty -name email -Value $User
            $userObject | add-member -membertype NoteProperty -name license -Value $license
            $output += $userObject
        }
    }
    OutFile($output)
    
}
    else{
        write-host "File import failed"
    }
}

main